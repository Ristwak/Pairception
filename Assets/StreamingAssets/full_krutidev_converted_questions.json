[
  {
    "question": "y‚ftfLVd fjxzs'ku",
    "answer": "f}vkèkkjh ifj.kkeksa dh Hkfo\";ok.kh djrk gS"
  },
  {
    "question": "vR;fèkd vuqdwyu",
    "answer": "e‚My çf'k{k.k ij vPNk çn'kZu djrk gS] ijh{k.k ij [kjkcA"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "vk;krdRØh; ?kVuk"
  },
  {
    "question": "th‚,u",
    "answer": "tUrjhd e‚My"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "ifjorZu dks j[krs gq, vk;krdRØh dks ?kVkrk gS"
  },
  {
    "question": "le; L=hys fl)kUrk",
    "answer": "ok;q ifjorZu ;k fodz; dh izfrfØ;k dk vuqeku"
  },
  {
    "question": "flxekbM",
    "answer": "tks 0 vkSj 1 ds chp esa eku fudykrk gS"
  },
  {
    "question": "ifjorZu",
    "answer": "Error due to model sensitivity to fluctuations in the training set"
  },
  {
    "question": "flxekbM",
    "answer": "tks 0 vkSj 1 ds chp esa eku fudykrk gS"
  },
  {
    "question": "v/;kiu nj",
    "answer": "v/;kiu esa dneksa dh vkdkj dks fu;af=r djrk gS"
  },
  {
    "question": "izkd`frd Hkk\"kk çlaLdj.k",
    "answer": "pkVckWLV ;k LSihe tk¡p"
  },
  {
    "question": "Σ(x - μ)² / N",
    "answer": "Population variance"
  },
  {
    "question": "vfu;ferrk igpku",
    "answer": "O;kikj esa nkf;Ro dh igpku"
  },
  {
    "question": "dEiuh ,dhdj.k",
    "answer": "izcU/k esa xzkgd oxhZdj.k"
  },
  {
    "question": "vfu;ferrk ls v/;kiu",
    "answer": "yVh u gq, vk¡dMksa esa xhfy gq, Øe igpkuuk"
  },
  {
    "question": "Σ(x - μ)² / N",
    "answer": "Population variance"
  },
  {
    "question": "vfu;ferrk igpku",
    "answer": "O;kikj esa nkf;Ro dh igpku"
  },
  {
    "question": "vfUre v/;kiu",
    "answer": "lfEefyr rFkk n.Mksa ds ek/;e ls v/;kiu"
  },
  {
    "question": "ds‚u‚u",
    "answer": "fu;fer v/;kiu"
  },
  {
    "question": "th‚,u",
    "answer": "tUrjhd e‚My"
  },
  {
    "question": "Group customers by behavior",
    "answer": "dEiuh ,dhdj.k"
  },
  {
    "question": "Detect credit card fraud",
    "answer": "vfu;ferrk igpku"
  },
  {
    "question": "lh‚u‚u",
    "answer": "fdV~Vh v/;kiu e‚My"
  },
  {
    "question": "lykg uhfr",
    "answer": "LVªheax IysVZQke ij fpfdr fMxzh lykg"
  },
  {
    "question": "D(‚lvks]‚, vks) = j + ^ekd D(‚lvks]‚, vks)",
    "answer": "D&v/;kiu iqu% ifjorZu fu;e"
  },
  {
    "question": "dEI;wVj fpfdr.k",
    "answer": "Qksu esa eq>q&Hkkx igpku"
  },
  {
    "question": ",Mkc~lwj",
    "answer": "lqèkkjhd vfHk;kaf=dh"
  },
  {
    "question": "fu.kZ; o`{k",
    "answer": "fo'ks\"krk vk/kkfjr iz'uksa ls vkadM+ksa dks ckaVrk gS"
  },
  {
    "question": "yksx(ikä¼1-ikä½)",
    "answer": "y‚ftfLVd fjxzs'ku vkSn"
  },
  {
    "question": "I(,@ch) = I(ch,@,)I(,)/I(ch)",
    "answer": "csl dk fl)kUr"
  },
  {
    "question": "czã ifjorZu",
    "answer": "u;wjYl usVdZl esa okbZVksa dks lEcfU/kr djrk gS"
  },
  {
    "question": "v/;kiu lwph",
    "answer": "e‚My dks f'kkyus ds fy, ç;ksx"
  },
  {
    "question": "y = ,e%‚D + ch",
    "answer": "jsfM‚u fjxzs'ku"
  },
  {
    "question": "ReLU",
    "answer": "Common activation function for deep nets"
  },
  {
    "question": "Generate realistic images",
    "answer": "th‚,u"
  },
  {
    "question": "Feature Engineering",
    "answer": "Creating input variables from raw data"
  },
  {
    "question": "Σwixi + b",
    "answer": "Linear function in ML"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "vk;krdRØh; ?kVuk"
  },
  {
    "question": "yksx(ikä¼1-ikä½)",
    "answer": "y‚ftfLVd fjxzs'ku vkSn"
  },
  {
    "question": "Autoencoder",
    "answer": "Unsupervised Neural Network"
  },
  {
    "question": "Generate realistic images",
    "answer": "th‚,u"
  },
  {
    "question": "RNN",
    "answer": "Recurrent Neural Network"
  },
  {
    "question": "lh‚u‚u",
    "answer": "fdV~Vh v/;kiu e‚My"
  },
  {
    "question": "Model Generalization",
    "answer": "Ability to perform well on unseen data"
  },
  {
    "question": "Classify sentiment from tweets",
    "answer": "Text Classification"
  },
  {
    "question": "Activation Function",
    "answer": "Adds non-linearity to models"
  },
  {
    "question": "∑(xi - x̄)² / n",
    "answer": "ifjorZu"
  },
  {
    "question": "K-Nearest Neighbors",
    "answer": "Classifies based on closest training examples"
  },
  {
    "question": "Classify sentiment from tweets",
    "answer": "Text Classification"
  },
  {
    "question": "vfu;ferrk ls v/;kiu",
    "answer": "yVh u gq, vk¡dMksa esa xhfy gq, Øe igpkuuk"
  },
  {
    "question": "vfUre v/;kiu",
    "answer": "Self-driving car navigation"
  },
  {
    "question": "K-Means Clustering",
    "answer": "Groups data by minimizing intra-cluster distance"
  },
  {
    "question": "v/;kiu nj",
    "answer": "v/;kiu esa dneksa dh vkdkj dks fu;af=r djrk gS"
  },
  {
    "question": "K-Means Clustering",
    "answer": "Groups data by minimizing intra-cluster distance"
  },
  {
    "question": "D(‚lvks]‚, vks) = j + ^ekd D(‚lvks]‚, vks)",
    "answer": "D&v/;kiu iqu% ifjorZu fu;e"
  },
  {
    "question": "Q-Learning",
    "answer": "vfUre v/;kiu"
  },
  {
    "question": "vR;fèkd vuqdwyu",
    "answer": "e‚My çf'k{k.k ij vPNk çn'kZu djrk gS] ijh{k.k ij [kjkcA"
  },
  {
    "question": "dEI;wVj fpfdr.k",
    "answer": "Qksu esa eq>q&Hkkx igpku"
  },
  {
    "question": "fu;fer v/;kiu",
    "answer": "Learning from labeled data"
  },
  {
    "question": ",Mkc~lwj",
    "answer": "lqèkkjhd vfHk;kaf=dh"
  },
  {
    "question": "Feature Engineering",
    "answer": "Creating input variables from raw data"
  },
  {
    "question": "Deep Learning",
    "answer": "Subset of machine learning using neural nets"
  },
  {
    "question": "Cross Validation",
    "answer": "Technique to evaluate model performance"
  },
  {
    "question": "Regression",
    "answer": "Predicting stock prices"
  },
  {
    "question": "Autoencoder",
    "answer": "Unsupervised Neural Network"
  },
  {
    "question": "Support Vector Machine",
    "answer": "Finds optimal separating hyperplane"
  },
  {
    "question": "jsfM‚u fjxzs'ku",
    "answer": "Predicts values with a best-fit line"
  },
  {
    "question": "Identify handwritten digits",
    "answer": "Convolutional Neural Network"
  },
  {
    "question": "Model Generalization",
    "answer": "Ability to perform well on unseen data"
  },
  {
    "question": "Underfitting",
    "answer": "Model is too simple to capture the pattern"
  },
  {
    "question": "Test Set",
    "answer": "Used to evaluate the model"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "ifjorZu dks j[krs gq, vk;krdRØh dks ?kVkrk gS"
  },
  {
    "question": "L = y log(p) + (1-y) log(1-p)",
    "answer": "Binary cross-entropy loss"
  },
  {
    "question": "Loss Function",
    "answer": "Measures model error"
  },
  {
    "question": "Bagging",
    "answer": "Ensemble Method"
  },
  {
    "question": "Epoch",
    "answer": "One full pass over training data"
  },
  {
    "question": "Softmax(xᵢ) = e^xᵢ / ∑e^x",
    "answer": "Probability distribution for classification"
  },
  {
    "question": "Voice Recognition",
    "answer": "Virtual assistant understanding speech"
  },
  {
    "question": "Activation Function",
    "answer": "Adds non-linearity to models"
  },
  {
    "question": "L = y log(p) + (1-y) log(1-p)",
    "answer": "Binary cross-entropy loss"
  },
  {
    "question": "ifjorZu",
    "answer": "Error due to model sensitivity to fluctuations in the training set"
  },
  {
    "question": "Support Vector Machine",
    "answer": "Finds optimal separating hyperplane"
  },
  {
    "question": "Detect credit card fraud",
    "answer": "vfu;ferrk igpku"
  },
  {
    "question": "Random Forest",
    "answer": "Ensemble of decision trees"
  },
  {
    "question": "E = -Σp(x)log(p(x))",
    "answer": "Entropy in information theory"
  },
  {
    "question": "Identify handwritten digits",
    "answer": "Convolutional Neural Network"
  },
  {
    "question": "Predict election outcomes",
    "answer": "Classification"
  },
  {
    "question": "Epoch",
    "answer": "One full pass over training data"
  },
  {
    "question": "Σwixi + b",
    "answer": "Linear function in ML"
  },
  {
    "question": "Voice Recognition",
    "answer": "Virtual assistant understanding speech"
  },
  {
    "question": "czã ifjorZu",
    "answer": "u;wjYl usVdZl esa okbZVksa dks lEcfU/kr djrk gS"
  },
  {
    "question": "Underfitting",
    "answer": "Model is too simple to capture the pattern"
  },
  {
    "question": "lykg uhfr",
    "answer": "LVªheax IysVZQke ij fpfdr fMxzh lykg"
  },
  {
    "question": "Translate text",
    "answer": "Neural Machine Translation"
  },
  {
    "question": "K-Nearest Neighbors",
    "answer": "Classifies based on closest training examples"
  },
  {
    "question": "ds‚u‚u",
    "answer": "fu;fer v/;kiu"
  },
  {
    "question": "y‚ftfLVd fjxzs'ku",
    "answer": "f}vkèkkjh ifj.kkeksa dh Hkfo\";ok.kh djrk gS"
  },
  {
    "question": "Predict house prices",
    "answer": "Regression"
  },
  {
    "question": "Detect spam emails",
    "answer": "Binary Classification"
  },
  {
    "question": "Regression",
    "answer": "Predicting stock prices"
  },
  {
    "question": "y‚ftfLVd fjxzs'ku",
    "answer": "f}vkèkkjh ifj.kkeksa dh Hkfo\";ok.kh djrk gS"
  },
  {
    "question": "vR;fèkd vuqdwyu",
    "answer": "e‚My çf'k{k.k ij vPNk çn'kZu djrk gS] ijh{k.k ij [kjkcA"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "vk;krdRØh; ?kVuk"
  },
  {
    "question": "th‚,u",
    "answer": "tUrjhd e‚My"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "ifjorZu dks j[krs gq, vk;krdRØh dks ?kVkrk gS"
  },
  {
    "question": "le; L=hys fl)kUrk",
    "answer": "ok;q ifjorZu ;k fodz; dh izfrfØ;k dk vuqeku"
  },
  {
    "question": "flxekbM",
    "answer": "tks 0 vkSj 1 ds chp esa eku fudykrk gS"
  },
  {
    "question": "ifjorZu",
    "answer": "Error due to model sensitivity to fluctuations in the training set"
  },
  {
    "question": "flxekbM",
    "answer": "tks 0 vkSj 1 ds chp esa eku fudykrk gS"
  },
  {
    "question": "v/;kiu nj",
    "answer": "v/;kiu esa dneksa dh vkdkj dks fu;af=r djrk gS"
  },
  {
    "question": "izkd`frd Hkk\"kk çlaLdj.k",
    "answer": "pkVckWLV ;k LSihe tk¡p"
  },
  {
    "question": "Σ(x - μ)² / N",
    "answer": "Population variance"
  },
  {
    "question": "vfu;ferrk igpku",
    "answer": "O;kikj esa nkf;Ro dh igpku"
  },
  {
    "question": "dEiuh ,dhdj.k",
    "answer": "izcU/k esa xzkgd oxhZdj.k"
  },
  {
    "question": "vfu;ferrk ls v/;kiu",
    "answer": "yVh u gq, vk¡dMksa esa xhfy gq, Øe igpkuuk"
  },
  {
    "question": "Σ(x - μ)² / N",
    "answer": "Population variance"
  },
  {
    "question": "vfu;ferrk igpku",
    "answer": "O;kikj esa nkf;Ro dh igpku"
  },
  {
    "question": "vfUre v/;kiu",
    "answer": "lfEefyr rFkk n.Mksa ds ek/;e ls v/;kiu"
  },
  {
    "question": "ds‚u‚u",
    "answer": "fu;fer v/;kiu"
  },
  {
    "question": "th‚,u",
    "answer": "tUrjhd e‚My"
  },
  {
    "question": "Group customers by behavior",
    "answer": "dEiuh ,dhdj.k"
  },
  {
    "question": "Detect credit card fraud",
    "answer": "vfu;ferrk igpku"
  },
  {
    "question": "lh‚u‚u",
    "answer": "fdV~Vh v/;kiu e‚My"
  },
  {
    "question": "lykg uhfr",
    "answer": "LVªheax IysVZQke ij fpfdr fMxzh lykg"
  },
  {
    "question": "D(‚lvks]‚, vks) = j + ^ekd D(‚lvks]‚, vks)",
    "answer": "D&v/;kiu iqu% ifjorZu fu;e"
  },
  {
    "question": "dEI;wVj fpfdr.k",
    "answer": "Qksu esa eq>q&Hkkx igpku"
  },
  {
    "question": ",Mkc~lwj",
    "answer": "lqèkkjhd vfHk;kaf=dh"
  },
  {
    "question": "fu.kZ; o`{k",
    "answer": "fo'ks\"krk vk/kkfjr iz'uksa ls vkadM+ksa dks ckaVrk gS"
  },
  {
    "question": "yksx(ikä¼1-ikä½)",
    "answer": "y‚ftfLVd fjxzs'ku vkSn"
  },
  {
    "question": "I(,@ch) = I(ch,@,)I(,)/I(ch)",
    "answer": "csl dk fl)kUr"
  },
  {
    "question": "czã ifjorZu",
    "answer": "u;wjYl usVdZl esa okbZVksa dks lEcfU/kr djrk gS"
  },
  {
    "question": "v/;kiu lwph",
    "answer": "e‚My dks f'kkyus ds fy, ç;ksx"
  },
  {
    "question": "y = ,e%‚D + ch",
    "answer": "jsfM‚u fjxzs'ku"
  },
  {
    "question": "ReLU",
    "answer": "Common activation function for deep nets"
  },
  {
    "question": "Generate realistic images",
    "answer": "th‚,u"
  },
  {
    "question": "Feature Engineering",
    "answer": "Creating input variables from raw data"
  },
  {
    "question": "Σwixi + b",
    "answer": "Linear function in ML"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "vk;krdRØh; ?kVuk"
  },
  {
    "question": "yksx(ikä¼1-ikä½)",
    "answer": "y‚ftfLVd fjxzs'ku vkSn"
  },
  {
    "question": "Autoencoder",
    "answer": "Unsupervised Neural Network"
  },
  {
    "question": "Generate realistic images",
    "answer": "th‚,u"
  },
  {
    "question": "RNN",
    "answer": "Recurrent Neural Network"
  },
  {
    "question": "lh‚u‚u",
    "answer": "fdV~Vh v/;kiu e‚My"
  },
  {
    "question": "Model Generalization",
    "answer": "Ability to perform well on unseen data"
  },
  {
    "question": "Classify sentiment from tweets",
    "answer": "Text Classification"
  },
  {
    "question": "Activation Function",
    "answer": "Adds non-linearity to models"
  },
  {
    "question": "∑(xi - x̄)² / n",
    "answer": "ifjorZu"
  },
  {
    "question": "K-Nearest Neighbors",
    "answer": "Classifies based on closest training examples"
  },
  {
    "question": "Classify sentiment from tweets",
    "answer": "Text Classification"
  },
  {
    "question": "vfu;ferrk ls v/;kiu",
    "answer": "yVh u gq, vk¡dMksa esa xhfy gq, Øe igpkuuk"
  },
  {
    "question": "vfUre v/;kiu",
    "answer": "Self-driving car navigation"
  },
  {
    "question": "K-Means Clustering",
    "answer": "Groups data by minimizing intra-cluster distance"
  },
  {
    "question": "v/;kiu nj",
    "answer": "v/;kiu esa dneksa dh vkdkj dks fu;af=r djrk gS"
  },
  {
    "question": "K-Means Clustering",
    "answer": "Groups data by minimizing intra-cluster distance"
  },
  {
    "question": "D(‚lvks]‚, vks) = j + ^ekd D(‚lvks]‚, vks)",
    "answer": "D&v/;kiu iqu% ifjorZu fu;e"
  },
  {
    "question": "Q-Learning",
    "answer": "vfUre v/;kiu"
  },
  {
    "question": "vR;fèkd vuqdwyu",
    "answer": "e‚My çf'k{k.k ij vPNk çn'kZu djrk gS] ijh{k.k ij [kjkcA"
  },
  {
    "question": "dEI;wVj fpfdr.k",
    "answer": "Qksu esa eq>q&Hkkx igpku"
  },
  {
    "question": "fu;fer v/;kiu",
    "answer": "Learning from labeled data"
  },
  {
    "question": ",Mkc~lwj",
    "answer": "lqèkkjhd vfHk;kaf=dh"
  },
  {
    "question": "Feature Engineering",
    "answer": "Creating input variables from raw data"
  },
  {
    "question": "Deep Learning",
    "answer": "Subset of machine learning using neural nets"
  },
  {
    "question": "Cross Validation",
    "answer": "Technique to evaluate model performance"
  },
  {
    "question": "Regression",
    "answer": "Predicting stock prices"
  },
  {
    "question": "Autoencoder",
    "answer": "Unsupervised Neural Network"
  },
  {
    "question": "Support Vector Machine",
    "answer": "Finds optimal separating hyperplane"
  },
  {
    "question": "jsfM‚u fjxzs'ku",
    "answer": "Predicts values with a best-fit line"
  },
  {
    "question": "Identify handwritten digits",
    "answer": "Convolutional Neural Network"
  },
  {
    "question": "Model Generalization",
    "answer": "Ability to perform well on unseen data"
  },
  {
    "question": "Underfitting",
    "answer": "Model is too simple to capture the pattern"
  },
  {
    "question": "Test Set",
    "answer": "Used to evaluate the model"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "ifjorZu dks j[krs gq, vk;krdRØh dks ?kVkrk gS"
  },
  {
    "question": "L = y log(p) + (1-y) log(1-p)",
    "answer": "Binary cross-entropy loss"
  },
  {
    "question": "Loss Function",
    "answer": "Measures model error"
  },
  {
    "question": "Bagging",
    "answer": "Ensemble Method"
  },
  {
    "question": "Epoch",
    "answer": "One full pass over training data"
  },
  {
    "question": "Softmax(xᵢ) = e^xᵢ / ∑e^x",
    "answer": "Probability distribution for classification"
  },
  {
    "question": "Voice Recognition",
    "answer": "Virtual assistant understanding speech"
  },
  {
    "question": "Activation Function",
    "answer": "Adds non-linearity to models"
  },
  {
    "question": "L = y log(p) + (1-y) log(1-p)",
    "answer": "Binary cross-entropy loss"
  },
  {
    "question": "ifjorZu",
    "answer": "Error due to model sensitivity to fluctuations in the training set"
  },
  {
    "question": "Support Vector Machine",
    "answer": "Finds optimal separating hyperplane"
  },
  {
    "question": "Detect credit card fraud",
    "answer": "vfu;ferrk igpku"
  },
  {
    "question": "Random Forest",
    "answer": "Ensemble of decision trees"
  },
  {
    "question": "E = -Σp(x)log(p(x))",
    "answer": "Entropy in information theory"
  },
  {
    "question": "Identify handwritten digits",
    "answer": "Convolutional Neural Network"
  },
  {
    "question": "Predict election outcomes",
    "answer": "Classification"
  },
  {
    "question": "Epoch",
    "answer": "One full pass over training data"
  },
  {
    "question": "Σwixi + b",
    "answer": "Linear function in ML"
  },
  {
    "question": "Voice Recognition",
    "answer": "Virtual assistant understanding speech"
  },
  {
    "question": "czã ifjorZu",
    "answer": "u;wjYl usVdZl esa okbZVksa dks lEcfU/kr djrk gS"
  },
  {
    "question": "Underfitting",
    "answer": "Model is too simple to capture the pattern"
  },
  {
    "question": "lykg uhfr",
    "answer": "LVªheax IysVZQke ij fpfdr fMxzh lykg"
  },
  {
    "question": "Translate text",
    "answer": "Neural Machine Translation"
  },
  {
    "question": "K-Nearest Neighbors",
    "answer": "Classifies based on closest training examples"
  },
  {
    "question": "ds‚u‚u",
    "answer": "fu;fer v/;kiu"
  },
  {
    "question": "y‚ftfLVd fjxzs'ku",
    "answer": "f}vkèkkjh ifj.kkeksa dh Hkfo\";ok.kh djrk gS"
  },
  {
    "question": "Predict house prices",
    "answer": "Regression"
  },
  {
    "question": "Detect spam emails",
    "answer": "Binary Classification"
  },
  {
    "question": "Regression",
    "answer": "Predicting stock prices"
  },
  {
    "question": "y‚ftfLVd fjxzs'ku",
    "answer": "f}vkèkkjh ifj.kkeksa dh Hkfo\";ok.kh djrk gS"
  },
  {
    "question": "vR;fèkd vuqdwyu",
    "answer": "e‚My çf'k{k.k ij vPNk çn'kZu djrk gS] ijh{k.k ij [kjkcA"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "vk;krdRØh; ?kVuk"
  },
  {
    "question": "th‚,u",
    "answer": "tUrjhd e‚My"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "ifjorZu dks j[krs gq, vk;krdRØh dks ?kVkrk gS"
  },
  {
    "question": "le; L=hys fl)kUrk",
    "answer": "ok;q ifjorZu ;k fodz; dh izfrfØ;k dk vuqeku"
  },
  {
    "question": "flxekbM",
    "answer": "tks 0 vkSj 1 ds chp esa eku fudykrk gS"
  },
  {
    "question": "ifjorZu",
    "answer": "Error due to model sensitivity to fluctuations in the training set"
  },
  {
    "question": "flxekbM",
    "answer": "tks 0 vkSj 1 ds chp esa eku fudykrk gS"
  },
  {
    "question": "v/;kiu nj",
    "answer": "v/;kiu esa dneksa dh vkdkj dks fu;af=r djrk gS"
  },
  {
    "question": "izkd`frd Hkk\"kk çlaLdj.k",
    "answer": "pkVckWLV ;k LSihe tk¡p"
  },
  {
    "question": "Σ(x - μ)² / N",
    "answer": "Population variance"
  },
  {
    "question": "vfu;ferrk igpku",
    "answer": "O;kikj esa nkf;Ro dh igpku"
  },
  {
    "question": "dEiuh ,dhdj.k",
    "answer": "izcU/k esa xzkgd oxhZdj.k"
  },
  {
    "question": "vfu;ferrk ls v/;kiu",
    "answer": "yVh u gq, vk¡dMksa esa xhfy gq, Øe igpkuuk"
  },
  {
    "question": "Σ(x - μ)² / N",
    "answer": "Population variance"
  },
  {
    "question": "vfu;ferrk igpku",
    "answer": "O;kikj esa nkf;Ro dh igpku"
  },
  {
    "question": "vfUre v/;kiu",
    "answer": "lfEefyr rFkk n.Mksa ds ek/;e ls v/;kiu"
  },
  {
    "question": "ds‚u‚u",
    "answer": "fu;fer v/;kiu"
  },
  {
    "question": "th‚,u",
    "answer": "tUrjhd e‚My"
  },
  {
    "question": "Group customers by behavior",
    "answer": "dEiuh ,dhdj.k"
  },
  {
    "question": "Detect credit card fraud",
    "answer": "vfu;ferrk igpku"
  },
  {
    "question": "lh‚u‚u",
    "answer": "fdV~Vh v/;kiu e‚My"
  },
  {
    "question": "lykg uhfr",
    "answer": "LVªheax IysVZQke ij fpfdr fMxzh lykg"
  },
  {
    "question": "D(‚lvks]‚, vks) = j + ^ekd D(‚lvks]‚, vks)",
    "answer": "D&v/;kiu iqu% ifjorZu fu;e"
  },
  {
    "question": "dEI;wVj fpfdr.k",
    "answer": "Qksu esa eq>q&Hkkx igpku"
  },
  {
    "question": ",Mkc~lwj",
    "answer": "lqèkkjhd vfHk;kaf=dh"
  },
  {
    "question": "fu.kZ; o`{k",
    "answer": "fo'ks\"krk vk/kkfjr iz'uksa ls vkadM+ksa dks ckaVrk gS"
  },
  {
    "question": "yksx(ikä¼1-ikä½)",
    "answer": "y‚ftfLVd fjxzs'ku vkSn"
  },
  {
    "question": "I(,@ch) = I(ch,@,)I(,)/I(ch)",
    "answer": "csl dk fl)kUr"
  },
  {
    "question": "czã ifjorZu",
    "answer": "u;wjYl usVdZl esa okbZVksa dks lEcfU/kr djrk gS"
  },
  {
    "question": "v/;kiu lwph",
    "answer": "e‚My dks f'kkyus ds fy, ç;ksx"
  },
  {
    "question": "y = ,e%‚D + ch",
    "answer": "jsfM‚u fjxzs'ku"
  },
  {
    "question": "ReLU",
    "answer": "Common activation function for deep nets"
  },
  {
    "question": "Generate realistic images",
    "answer": "th‚,u"
  },
  {
    "question": "Feature Engineering",
    "answer": "Creating input variables from raw data"
  },
  {
    "question": "Σwixi + b",
    "answer": "Linear function in ML"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "vk;krdRØh; ?kVuk"
  },
  {
    "question": "yksx(ikä¼1-ikä½)",
    "answer": "y‚ftfLVd fjxzs'ku vkSn"
  },
  {
    "question": "Autoencoder",
    "answer": "Unsupervised Neural Network"
  },
  {
    "question": "Generate realistic images",
    "answer": "th‚,u"
  },
  {
    "question": "RNN",
    "answer": "Recurrent Neural Network"
  },
  {
    "question": "lh‚u‚u",
    "answer": "fdV~Vh v/;kiu e‚My"
  },
  {
    "question": "Model Generalization",
    "answer": "Ability to perform well on unseen data"
  },
  {
    "question": "Classify sentiment from tweets",
    "answer": "Text Classification"
  },
  {
    "question": "Activation Function",
    "answer": "Adds non-linearity to models"
  },
  {
    "question": "∑(xi - x̄)² / n",
    "answer": "ifjorZu"
  },
  {
    "question": "K-Nearest Neighbors",
    "answer": "Classifies based on closest training examples"
  },
  {
    "question": "Classify sentiment from tweets",
    "answer": "Text Classification"
  },
  {
    "question": "vfu;ferrk ls v/;kiu",
    "answer": "yVh u gq, vk¡dMksa esa xhfy gq, Øe igpkuuk"
  },
  {
    "question": "vfUre v/;kiu",
    "answer": "Self-driving car navigation"
  },
  {
    "question": "K-Means Clustering",
    "answer": "Groups data by minimizing intra-cluster distance"
  },
  {
    "question": "v/;kiu nj",
    "answer": "v/;kiu esa dneksa dh vkdkj dks fu;af=r djrk gS"
  },
  {
    "question": "K-Means Clustering",
    "answer": "Groups data by minimizing intra-cluster distance"
  },
  {
    "question": "D(‚lvks]‚, vks) = j + ^ekd D(‚lvks]‚, vks)",
    "answer": "D&v/;kiu iqu% ifjorZu fu;e"
  },
  {
    "question": "Q-Learning",
    "answer": "vfUre v/;kiu"
  },
  {
    "question": "vR;fèkd vuqdwyu",
    "answer": "e‚My çf'k{k.k ij vPNk çn'kZu djrk gS] ijh{k.k ij [kjkcA"
  },
  {
    "question": "dEI;wVj fpfdr.k",
    "answer": "Qksu esa eq>q&Hkkx igpku"
  },
  {
    "question": "fu;fer v/;kiu",
    "answer": "Learning from labeled data"
  },
  {
    "question": ",Mkc~lwj",
    "answer": "lqèkkjhd vfHk;kaf=dh"
  },
  {
    "question": "Feature Engineering",
    "answer": "Creating input variables from raw data"
  },
  {
    "question": "Deep Learning",
    "answer": "Subset of machine learning using neural nets"
  },
  {
    "question": "Cross Validation",
    "answer": "Technique to evaluate model performance"
  },
  {
    "question": "Regression",
    "answer": "Predicting stock prices"
  },
  {
    "question": "Autoencoder",
    "answer": "Unsupervised Neural Network"
  },
  {
    "question": "Support Vector Machine",
    "answer": "Finds optimal separating hyperplane"
  },
  {
    "question": "jsfM‚u fjxzs'ku",
    "answer": "Predicts values with a best-fit line"
  },
  {
    "question": "Identify handwritten digits",
    "answer": "Convolutional Neural Network"
  },
  {
    "question": "Model Generalization",
    "answer": "Ability to perform well on unseen data"
  },
  {
    "question": "Underfitting",
    "answer": "Model is too simple to capture the pattern"
  },
  {
    "question": "Test Set",
    "answer": "Used to evaluate the model"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "ifjorZu dks j[krs gq, vk;krdRØh dks ?kVkrk gS"
  },
  {
    "question": "L = y log(p) + (1-y) log(1-p)",
    "answer": "Binary cross-entropy loss"
  },
  {
    "question": "Loss Function",
    "answer": "Measures model error"
  },
  {
    "question": "Bagging",
    "answer": "Ensemble Method"
  },
  {
    "question": "Epoch",
    "answer": "One full pass over training data"
  },
  {
    "question": "Softmax(xᵢ) = e^xᵢ / ∑e^x",
    "answer": "Probability distribution for classification"
  },
  {
    "question": "Voice Recognition",
    "answer": "Virtual assistant understanding speech"
  },
  {
    "question": "Activation Function",
    "answer": "Adds non-linearity to models"
  },
  {
    "question": "L = y log(p) + (1-y) log(1-p)",
    "answer": "Binary cross-entropy loss"
  },
  {
    "question": "ifjorZu",
    "answer": "Error due to model sensitivity to fluctuations in the training set"
  },
  {
    "question": "Support Vector Machine",
    "answer": "Finds optimal separating hyperplane"
  },
  {
    "question": "Detect credit card fraud",
    "answer": "vfu;ferrk igpku"
  },
  {
    "question": "Random Forest",
    "answer": "Ensemble of decision trees"
  },
  {
    "question": "E = -Σp(x)log(p(x))",
    "answer": "Entropy in information theory"
  },
  {
    "question": "Identify handwritten digits",
    "answer": "Convolutional Neural Network"
  },
  {
    "question": "Predict election outcomes",
    "answer": "Classification"
  },
  {
    "question": "Epoch",
    "answer": "One full pass over training data"
  },
  {
    "question": "Σwixi + b",
    "answer": "Linear function in ML"
  },
  {
    "question": "Voice Recognition",
    "answer": "Virtual assistant understanding speech"
  },
  {
    "question": "czã ifjorZu",
    "answer": "u;wjYl usVdZl esa okbZVksa dks lEcfU/kr djrk gS"
  },
  {
    "question": "Underfitting",
    "answer": "Model is too simple to capture the pattern"
  },
  {
    "question": "lykg uhfr",
    "answer": "LVªheax IysVZQke ij fpfdr fMxzh lykg"
  },
  {
    "question": "Translate text",
    "answer": "Neural Machine Translation"
  },
  {
    "question": "K-Nearest Neighbors",
    "answer": "Classifies based on closest training examples"
  },
  {
    "question": "ds‚u‚u",
    "answer": "fu;fer v/;kiu"
  },
  {
    "question": "y‚ftfLVd fjxzs'ku",
    "answer": "f}vkèkkjh ifj.kkeksa dh Hkfo\";ok.kh djrk gS"
  },
  {
    "question": "Predict house prices",
    "answer": "Regression"
  },
  {
    "question": "Detect spam emails",
    "answer": "Binary Classification"
  },
  {
    "question": "Regression",
    "answer": "Predicting stock prices"
  },
  {
    "question": "y‚ftfLVd fjxzs'ku",
    "answer": "f}vkèkkjh ifj.kkeksa dh Hkfo\";ok.kh djrk gS"
  },
  {
    "question": "vR;fèkd vuqdwyu",
    "answer": "e‚My çf'k{k.k ij vPNk çn'kZu djrk gS] ijh{k.k ij [kjkcA"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "vk;krdRØh; ?kVuk"
  },
  {
    "question": "th‚,u",
    "answer": "tUrjhd e‚My"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "ifjorZu dks j[krs gq, vk;krdRØh dks ?kVkrk gS"
  },
  {
    "question": "le; L=hys fl)kUrk",
    "answer": "ok;q ifjorZu ;k fodz; dh izfrfØ;k dk vuqeku"
  },
  {
    "question": "flxekbM",
    "answer": "tks 0 vkSj 1 ds chp esa eku fudykrk gS"
  },
  {
    "question": "ifjorZu",
    "answer": "Error due to model sensitivity to fluctuations in the training set"
  },
  {
    "question": "flxekbM",
    "answer": "tks 0 vkSj 1 ds chp esa eku fudykrk gS"
  },
  {
    "question": "v/;kiu nj",
    "answer": "v/;kiu esa dneksa dh vkdkj dks fu;af=r djrk gS"
  },
  {
    "question": "izkd`frd Hkk\"kk çlaLdj.k",
    "answer": "pkVckWLV ;k LSihe tk¡p"
  },
  {
    "question": "Σ(x - μ)² / N",
    "answer": "Population variance"
  },
  {
    "question": "vfu;ferrk igpku",
    "answer": "O;kikj esa nkf;Ro dh igpku"
  },
  {
    "question": "dEiuh ,dhdj.k",
    "answer": "izcU/k esa xzkgd oxhZdj.k"
  },
  {
    "question": "vfu;ferrk ls v/;kiu",
    "answer": "yVh u gq, vk¡dMksa esa xhfy gq, Øe igpkuuk"
  },
  {
    "question": "Σ(x - μ)² / N",
    "answer": "Population variance"
  },
  {
    "question": "vfu;ferrk igpku",
    "answer": "O;kikj esa nkf;Ro dh igpku"
  },
  {
    "question": "vfUre v/;kiu",
    "answer": "lfEefyr rFkk n.Mksa ds ek/;e ls v/;kiu"
  },
  {
    "question": "ds‚u‚u",
    "answer": "fu;fer v/;kiu"
  },
  {
    "question": "th‚,u",
    "answer": "tUrjhd e‚My"
  },
  {
    "question": "Group customers by behavior",
    "answer": "dEiuh ,dhdj.k"
  },
  {
    "question": "Detect credit card fraud",
    "answer": "vfu;ferrk igpku"
  },
  {
    "question": "lh‚u‚u",
    "answer": "fdV~Vh v/;kiu e‚My"
  },
  {
    "question": "lykg uhfr",
    "answer": "LVªheax IysVZQke ij fpfdr fMxzh lykg"
  },
  {
    "question": "D(‚lvks]‚, vks) = j + ^ekd D(‚lvks]‚, vks)",
    "answer": "D&v/;kiu iqu% ifjorZu fu;e"
  },
  {
    "question": "dEI;wVj fpfdr.k",
    "answer": "Qksu esa eq>q&Hkkx igpku"
  },
  {
    "question": ",Mkc~lwj",
    "answer": "lqèkkjhd vfHk;kaf=dh"
  },
  {
    "question": "fu.kZ; o`{k",
    "answer": "fo'ks\"krk vk/kkfjr iz'uksa ls vkadM+ksa dks ckaVrk gS"
  },
  {
    "question": "yksx(ikä¼1-ikä½)",
    "answer": "y‚ftfLVd fjxzs'ku vkSn"
  },
  {
    "question": "I(,@ch) = I(ch,@,)I(,)/I(ch)",
    "answer": "csl dk fl)kUr"
  },
  {
    "question": "czã ifjorZu",
    "answer": "u;wjYl usVdZl esa okbZVksa dks lEcfU/kr djrk gS"
  },
  {
    "question": "v/;kiu lwph",
    "answer": "e‚My dks f'kkyus ds fy, ç;ksx"
  },
  {
    "question": "y = ,e%‚D + ch",
    "answer": "jsfM‚u fjxzs'ku"
  },
  {
    "question": "ReLU",
    "answer": "Common activation function for deep nets"
  },
  {
    "question": "Generate realistic images",
    "answer": "th‚,u"
  },
  {
    "question": "Feature Engineering",
    "answer": "Creating input variables from raw data"
  },
  {
    "question": "Σwixi + b",
    "answer": "Linear function in ML"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "vk;krdRØh; ?kVuk"
  },
  {
    "question": "yksx(ikä¼1-ikä½)",
    "answer": "y‚ftfLVd fjxzs'ku vkSn"
  },
  {
    "question": "Autoencoder",
    "answer": "Unsupervised Neural Network"
  },
  {
    "question": "Generate realistic images",
    "answer": "th‚,u"
  },
  {
    "question": "RNN",
    "answer": "Recurrent Neural Network"
  },
  {
    "question": "lh‚u‚u",
    "answer": "fdV~Vh v/;kiu e‚My"
  },
  {
    "question": "Model Generalization",
    "answer": "Ability to perform well on unseen data"
  },
  {
    "question": "Classify sentiment from tweets",
    "answer": "Text Classification"
  },
  {
    "question": "Activation Function",
    "answer": "Adds non-linearity to models"
  },
  {
    "question": "∑(xi - x̄)² / n",
    "answer": "ifjorZu"
  },
  {
    "question": "K-Nearest Neighbors",
    "answer": "Classifies based on closest training examples"
  },
  {
    "question": "Classify sentiment from tweets",
    "answer": "Text Classification"
  },
  {
    "question": "vfu;ferrk ls v/;kiu",
    "answer": "yVh u gq, vk¡dMksa esa xhfy gq, Øe igpkuuk"
  },
  {
    "question": "vfUre v/;kiu",
    "answer": "Self-driving car navigation"
  },
  {
    "question": "K-Means Clustering",
    "answer": "Groups data by minimizing intra-cluster distance"
  },
  {
    "question": "v/;kiu nj",
    "answer": "v/;kiu esa dneksa dh vkdkj dks fu;af=r djrk gS"
  },
  {
    "question": "K-Means Clustering",
    "answer": "Groups data by minimizing intra-cluster distance"
  },
  {
    "question": "D(‚lvks]‚, vks) = j + ^ekd D(‚lvks]‚, vks)",
    "answer": "D&v/;kiu iqu% ifjorZu fu;e"
  },
  {
    "question": "Q-Learning",
    "answer": "vfUre v/;kiu"
  },
  {
    "question": "vR;fèkd vuqdwyu",
    "answer": "e‚My çf'k{k.k ij vPNk çn'kZu djrk gS] ijh{k.k ij [kjkcA"
  },
  {
    "question": "dEI;wVj fpfdr.k",
    "answer": "Qksu esa eq>q&Hkkx igpku"
  },
  {
    "question": "fu;fer v/;kiu",
    "answer": "Learning from labeled data"
  },
  {
    "question": ",Mkc~lwj",
    "answer": "lqèkkjhd vfHk;kaf=dh"
  },
  {
    "question": "Feature Engineering",
    "answer": "Creating input variables from raw data"
  },
  {
    "question": "Deep Learning",
    "answer": "Subset of machine learning using neural nets"
  },
  {
    "question": "Cross Validation",
    "answer": "Technique to evaluate model performance"
  },
  {
    "question": "Regression",
    "answer": "Predicting stock prices"
  },
  {
    "question": "Autoencoder",
    "answer": "Unsupervised Neural Network"
  },
  {
    "question": "Support Vector Machine",
    "answer": "Finds optimal separating hyperplane"
  },
  {
    "question": "jsfM‚u fjxzs'ku",
    "answer": "Predicts values with a best-fit line"
  },
  {
    "question": "Identify handwritten digits",
    "answer": "Convolutional Neural Network"
  },
  {
    "question": "Model Generalization",
    "answer": "Ability to perform well on unseen data"
  },
  {
    "question": "Underfitting",
    "answer": "Model is too simple to capture the pattern"
  },
  {
    "question": "Test Set",
    "answer": "Used to evaluate the model"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "ifjorZu dks j[krs gq, vk;krdRØh dks ?kVkrk gS"
  },
  {
    "question": "L = y log(p) + (1-y) log(1-p)",
    "answer": "Binary cross-entropy loss"
  },
  {
    "question": "Loss Function",
    "answer": "Measures model error"
  },
  {
    "question": "Bagging",
    "answer": "Ensemble Method"
  },
  {
    "question": "Epoch",
    "answer": "One full pass over training data"
  },
  {
    "question": "Softmax(xᵢ) = e^xᵢ / ∑e^x",
    "answer": "Probability distribution for classification"
  },
  {
    "question": "Voice Recognition",
    "answer": "Virtual assistant understanding speech"
  },
  {
    "question": "Activation Function",
    "answer": "Adds non-linearity to models"
  },
  {
    "question": "L = y log(p) + (1-y) log(1-p)",
    "answer": "Binary cross-entropy loss"
  },
  {
    "question": "ifjorZu",
    "answer": "Error due to model sensitivity to fluctuations in the training set"
  },
  {
    "question": "Support Vector Machine",
    "answer": "Finds optimal separating hyperplane"
  },
  {
    "question": "Detect credit card fraud",
    "answer": "vfu;ferrk igpku"
  },
  {
    "question": "Random Forest",
    "answer": "Ensemble of decision trees"
  },
  {
    "question": "E = -Σp(x)log(p(x))",
    "answer": "Entropy in information theory"
  },
  {
    "question": "Identify handwritten digits",
    "answer": "Convolutional Neural Network"
  },
  {
    "question": "Predict election outcomes",
    "answer": "Classification"
  },
  {
    "question": "Epoch",
    "answer": "One full pass over training data"
  },
  {
    "question": "Σwixi + b",
    "answer": "Linear function in ML"
  },
  {
    "question": "Voice Recognition",
    "answer": "Virtual assistant understanding speech"
  },
  {
    "question": "czã ifjorZu",
    "answer": "u;wjYl usVdZl esa okbZVksa dks lEcfU/kr djrk gS"
  },
  {
    "question": "Underfitting",
    "answer": "Model is too simple to capture the pattern"
  },
  {
    "question": "lykg uhfr",
    "answer": "LVªheax IysVZQke ij fpfdr fMxzh lykg"
  },
  {
    "question": "Translate text",
    "answer": "Neural Machine Translation"
  },
  {
    "question": "K-Nearest Neighbors",
    "answer": "Classifies based on closest training examples"
  },
  {
    "question": "ds‚u‚u",
    "answer": "fu;fer v/;kiu"
  },
  {
    "question": "y‚ftfLVd fjxzs'ku",
    "answer": "f}vkèkkjh ifj.kkeksa dh Hkfo\";ok.kh djrk gS"
  },
  {
    "question": "Predict house prices",
    "answer": "Regression"
  },
  {
    "question": "Detect spam emails",
    "answer": "Binary Classification"
  },
  {
    "question": "Regression",
    "answer": "Predicting stock prices"
  },
  {
    "question": "y‚ftfLVd fjxzs'ku",
    "answer": "f}vkèkkjh ifj.kkeksa dh Hkfo\";ok.kh djrk gS"
  },
  {
    "question": "vR;fèkd vuqdwyu",
    "answer": "e‚My çf'k{k.k ij vPNk çn'kZu djrk gS] ijh{k.k ij [kjkcA"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "vk;krdRØh; ?kVuk"
  },
  {
    "question": "th‚,u",
    "answer": "tUrjhd e‚My"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "ifjorZu dks j[krs gq, vk;krdRØh dks ?kVkrk gS"
  },
  {
    "question": "le; L=hys fl)kUrk",
    "answer": "ok;q ifjorZu ;k fodz; dh izfrfØ;k dk vuqeku"
  },
  {
    "question": "flxekbM",
    "answer": "tks 0 vkSj 1 ds chp esa eku fudykrk gS"
  },
  {
    "question": "ifjorZu",
    "answer": "Error due to model sensitivity to fluctuations in the training set"
  },
  {
    "question": "flxekbM",
    "answer": "tks 0 vkSj 1 ds chp esa eku fudykrk gS"
  },
  {
    "question": "v/;kiu nj",
    "answer": "v/;kiu esa dneksa dh vkdkj dks fu;af=r djrk gS"
  },
  {
    "question": "izkd`frd Hkk\"kk çlaLdj.k",
    "answer": "pkVckWLV ;k LSihe tk¡p"
  },
  {
    "question": "Σ(x - μ)² / N",
    "answer": "Population variance"
  },
  {
    "question": "vfu;ferrk igpku",
    "answer": "O;kikj esa nkf;Ro dh igpku"
  },
  {
    "question": "dEiuh ,dhdj.k",
    "answer": "izcU/k esa xzkgd oxhZdj.k"
  },
  {
    "question": "vfu;ferrk ls v/;kiu",
    "answer": "yVh u gq, vk¡dMksa esa xhfy gq, Øe igpkuuk"
  },
  {
    "question": "Σ(x - μ)² / N",
    "answer": "Population variance"
  },
  {
    "question": "vfu;ferrk igpku",
    "answer": "O;kikj esa nkf;Ro dh igpku"
  },
  {
    "question": "vfUre v/;kiu",
    "answer": "lfEefyr rFkk n.Mksa ds ek/;e ls v/;kiu"
  },
  {
    "question": "ds‚u‚u",
    "answer": "fu;fer v/;kiu"
  },
  {
    "question": "th‚,u",
    "answer": "tUrjhd e‚My"
  },
  {
    "question": "Group customers by behavior",
    "answer": "dEiuh ,dhdj.k"
  },
  {
    "question": "Detect credit card fraud",
    "answer": "vfu;ferrk igpku"
  },
  {
    "question": "lh‚u‚u",
    "answer": "fdV~Vh v/;kiu e‚My"
  },
  {
    "question": "lykg uhfr",
    "answer": "LVªheax IysVZQke ij fpfdr fMxzh lykg"
  },
  {
    "question": "D(‚lvks]‚, vks) = j + ^ekd D(‚lvks]‚, vks)",
    "answer": "D&v/;kiu iqu% ifjorZu fu;e"
  },
  {
    "question": "dEI;wVj fpfdr.k",
    "answer": "Qksu esa eq>q&Hkkx igpku"
  },
  {
    "question": ",Mkc~lwj",
    "answer": "lqèkkjhd vfHk;kaf=dh"
  },
  {
    "question": "fu.kZ; o`{k",
    "answer": "fo'ks\"krk vk/kkfjr iz'uksa ls vkadM+ksa dks ckaVrk gS"
  },
  {
    "question": "yksx(ikä¼1-ikä½)",
    "answer": "y‚ftfLVd fjxzs'ku vkSn"
  },
  {
    "question": "I(,@ch) = I(ch,@,)I(,)/I(ch)",
    "answer": "csl dk fl)kUr"
  },
  {
    "question": "czã ifjorZu",
    "answer": "u;wjYl usVdZl esa okbZVksa dks lEcfU/kr djrk gS"
  },
  {
    "question": "v/;kiu lwph",
    "answer": "e‚My dks f'kkyus ds fy, ç;ksx"
  },
  {
    "question": "y = ,e%‚D + ch",
    "answer": "jsfM‚u fjxzs'ku"
  },
  {
    "question": "ReLU",
    "answer": "Common activation function for deep nets"
  },
  {
    "question": "Generate realistic images",
    "answer": "th‚,u"
  },
  {
    "question": "Feature Engineering",
    "answer": "Creating input variables from raw data"
  },
  {
    "question": "Σwixi + b",
    "answer": "Linear function in ML"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "vk;krdRØh; ?kVuk"
  },
  {
    "question": "yksx(ikä¼1-ikä½)",
    "answer": "y‚ftfLVd fjxzs'ku vkSn"
  },
  {
    "question": "Autoencoder",
    "answer": "Unsupervised Neural Network"
  },
  {
    "question": "Generate realistic images",
    "answer": "th‚,u"
  },
  {
    "question": "RNN",
    "answer": "Recurrent Neural Network"
  },
  {
    "question": "lh‚u‚u",
    "answer": "fdV~Vh v/;kiu e‚My"
  },
  {
    "question": "Model Generalization",
    "answer": "Ability to perform well on unseen data"
  },
  {
    "question": "Classify sentiment from tweets",
    "answer": "Text Classification"
  },
  {
    "question": "Activation Function",
    "answer": "Adds non-linearity to models"
  },
  {
    "question": "∑(xi - x̄)² / n",
    "answer": "ifjorZu"
  },
  {
    "question": "K-Nearest Neighbors",
    "answer": "Classifies based on closest training examples"
  },
  {
    "question": "Classify sentiment from tweets",
    "answer": "Text Classification"
  },
  {
    "question": "vfu;ferrk ls v/;kiu",
    "answer": "yVh u gq, vk¡dMksa esa xhfy gq, Øe igpkuuk"
  },
  {
    "question": "vfUre v/;kiu",
    "answer": "Self-driving car navigation"
  },
  {
    "question": "K-Means Clustering",
    "answer": "Groups data by minimizing intra-cluster distance"
  },
  {
    "question": "v/;kiu nj",
    "answer": "v/;kiu esa dneksa dh vkdkj dks fu;af=r djrk gS"
  },
  {
    "question": "K-Means Clustering",
    "answer": "Groups data by minimizing intra-cluster distance"
  },
  {
    "question": "D(‚lvks]‚, vks) = j + ^ekd D(‚lvks]‚, vks)",
    "answer": "D&v/;kiu iqu% ifjorZu fu;e"
  },
  {
    "question": "Q-Learning",
    "answer": "vfUre v/;kiu"
  },
  {
    "question": "vR;fèkd vuqdwyu",
    "answer": "e‚My çf'k{k.k ij vPNk çn'kZu djrk gS] ijh{k.k ij [kjkcA"
  },
  {
    "question": "dEI;wVj fpfdr.k",
    "answer": "Qksu esa eq>q&Hkkx igpku"
  },
  {
    "question": "fu;fer v/;kiu",
    "answer": "Learning from labeled data"
  },
  {
    "question": ",Mkc~lwj",
    "answer": "lqèkkjhd vfHk;kaf=dh"
  },
  {
    "question": "Feature Engineering",
    "answer": "Creating input variables from raw data"
  },
  {
    "question": "Deep Learning",
    "answer": "Subset of machine learning using neural nets"
  },
  {
    "question": "Cross Validation",
    "answer": "Technique to evaluate model performance"
  },
  {
    "question": "Regression",
    "answer": "Predicting stock prices"
  },
  {
    "question": "Autoencoder",
    "answer": "Unsupervised Neural Network"
  },
  {
    "question": "Support Vector Machine",
    "answer": "Finds optimal separating hyperplane"
  },
  {
    "question": "jsfM‚u fjxzs'ku",
    "answer": "Predicts values with a best-fit line"
  },
  {
    "question": "Identify handwritten digits",
    "answer": "Convolutional Neural Network"
  },
  {
    "question": "Model Generalization",
    "answer": "Ability to perform well on unseen data"
  },
  {
    "question": "Underfitting",
    "answer": "Model is too simple to capture the pattern"
  },
  {
    "question": "Test Set",
    "answer": "Used to evaluate the model"
  },
  {
    "question": "ihlhvkbZ",
    "answer": "ifjorZu dks j[krs gq, vk;krdRØh dks ?kVkrk gS"
  },
  {
    "question": "L = y log(p) + (1-y) log(1-p)",
    "answer": "Binary cross-entropy loss"
  },
  {
    "question": "Loss Function",
    "answer": "Measures model error"
  },
  {
    "question": "Bagging",
    "answer": "Ensemble Method"
  },
  {
    "question": "Epoch",
    "answer": "One full pass over training data"
  },
  {
    "question": "Softmax(xᵢ) = e^xᵢ / ∑e^x",
    "answer": "Probability distribution for classification"
  },
  {
    "question": "Voice Recognition",
    "answer": "Virtual assistant understanding speech"
  },
  {
    "question": "Activation Function",
    "answer": "Adds non-linearity to models"
  },
  {
    "question": "L = y log(p) + (1-y) log(1-p)",
    "answer": "Binary cross-entropy loss"
  },
  {
    "question": "ifjorZu",
    "answer": "Error due to model sensitivity to fluctuations in the training set"
  },
  {
    "question": "Support Vector Machine",
    "answer": "Finds optimal separating hyperplane"
  },
  {
    "question": "Detect credit card fraud",
    "answer": "vfu;ferrk igpku"
  },
  {
    "question": "Random Forest",
    "answer": "Ensemble of decision trees"
  },
  {
    "question": "E = -Σp(x)log(p(x))",
    "answer": "Entropy in information theory"
  },
  {
    "question": "Identify handwritten digits",
    "answer": "Convolutional Neural Network"
  },
  {
    "question": "Predict election outcomes",
    "answer": "Classification"
  },
  {
    "question": "Epoch",
    "answer": "One full pass over training data"
  },
  {
    "question": "Σwixi + b",
    "answer": "Linear function in ML"
  },
  {
    "question": "Voice Recognition",
    "answer": "Virtual assistant understanding speech"
  },
  {
    "question": "czã ifjorZu",
    "answer": "u;wjYl usVdZl esa okbZVksa dks lEcfU/kr djrk gS"
  },
  {
    "question": "Underfitting",
    "answer": "Model is too simple to capture the pattern"
  },
  {
    "question": "lykg uhfr",
    "answer": "LVªheax IysVZQke ij fpfdr fMxzh lykg"
  },
  {
    "question": "Translate text",
    "answer": "Neural Machine Translation"
  },
  {
    "question": "K-Nearest Neighbors",
    "answer": "Classifies based on closest training examples"
  },
  {
    "question": "ds‚u‚u",
    "answer": "fu;fer v/;kiu"
  },
  {
    "question": "y‚ftfLVd fjxzs'ku",
    "answer": "f}vkèkkjh ifj.kkeksa dh Hkfo\";ok.kh djrk gS"
  },
  {
    "question": "Predict house prices",
    "answer": "Regression"
  },
  {
    "question": "Detect spam emails",
    "answer": "Binary Classification"
  },
  {
    "question": "Regression",
    "answer": "Predicting stock prices"
  }
]